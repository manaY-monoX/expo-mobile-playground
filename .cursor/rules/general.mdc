# React Native + Expo + Hermes プロジェクトルール

## プロジェクト概要

このプロジェクトは、React Native、Expo、Hermesエンジンを使用したモバイルアプリケーション開発のプロジェクトです。
実機でのテストが可能な「Hello World」アプリケーションとして構築されており、今後の開発の基盤となります。

### 戦闘力レベル: 530,000 ⚡
*フリーザ様の美学による完璧な品質基準*

---

## 技術スタック

### コア技術
- **React Native**: 0.79.5
- **Expo SDK**: ~53.0.20
- **TypeScript**: ~5.8.3
- **Hermes Engine**: 有効（app.jsonで明示設定）
- **New Architecture**: 有効

### 開発ツール
- **Node.js**: 18以上推奨
- **npm/yarn**: パッケージ管理
- **Expo CLI**: @expo/cli最新版

### 依存関係
```json
{
  "name": "expo-mobile-playground",
  "dependencies": {
    "expo": "~53.0.20",
    "expo-status-bar": "~2.2.3",
    "react": "19.0.0",
    "react-native": "0.79.5"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@types/react": "~19.0.10",
    "typescript": "~5.8.3"
  }
}
```

---

## 開発ルール

### ファイル構成ルール
```
.
├── App.tsx                 # メインアプリケーションコンポーネント
├── app.json               # Expo設定（Hermes有効化必須）
├── index.ts               # エントリーポイント
├── package.json           # 依存関係・スクリプト管理
├── tsconfig.json          # TypeScript設定
├── assets/                # アプリケーションアセット
├── .cursor/rules/         # プロジェクトルール（このファイル）
└── DEVICE_TESTING_MANUAL.md # 実機テストマニュアル
```

### コーディング規約

#### TypeScript
- 全ファイルでTypeScriptを使用すること
- `any`型の使用は禁止（型安全性の確保）
- インターフェースは明確に定義すること

#### React Native
- 関数コンポーネントとHooksを優先使用
- StyleSheetを使用したスタイリング
- プラットフォーム固有コードは最小限に

#### スタイリング
- **配色**: 深い宇宙色（#0A0020）ベースのダークテーマ
- **エフェクト**: シャドウ、グロー効果を適切に使用
- **レスポンシブ**: 全デバイスサイズに対応
- **アクセシビリティ**: コントラスト比の確保

---

## 必須設定項目

### app.json設定
```json
{
  "expo": {
    "name": "expo-mobile-playground",
    "slug": "expo-mobile-playground", 
    "jsEngine": "hermes",        // Hermesエンジン必須
    "newArchEnabled": true,      // 新アーキテクチャ有効
    "orientation": "portrait"    // 縦向き固定推奨
  }
}
```

### package.jsonスクリプト
以下のスクリプトは必須：
- `start`: 開発サーバー起動
- `type-check`: TypeScript型チェック
- `build`: プロダクションビルド
- `clean`: キャッシュクリア

---

## 開発ワークフロー

### 1. 開発開始時
```bash
# 依存関係インストール
npm install

# 型チェック実行
npm run type-check

# 開発サーバー起動
npm start
```

### 2. コード変更時
```bash
# 型チェック（必須）
npm run type-check

# 実機テスト実行
# DEVICE_TESTING_MANUAL.mdを参照
```

### 3. コミット前
```bash
# キャッシュクリア
npm run clean

# 全体ビルド確認
npm run build

# 実機での最終テスト
```

---

## 実機テストルール

### 必須テスト項目
- [ ] Expo Goでの動作確認
- [ ] iOS/Android両プラットフォームでのテスト
- [ ] ネットワーク接続テスト
- [ ] パフォーマンス確認（Hermesエンジン効果）

### テスト環境
- **iOS**: iOS 13.0以上
- **Android**: Android 6.0以上  
- **ネットワーク**: 開発マシンと同一Wi-Fi

詳細は `DEVICE_TESTING_MANUAL.md` を参照

---

## 品質保証基準

### パフォーマンス要件
- **アプリ起動時間**: 3秒以内
- **JavaScript実行**: Hermesエンジンによる最適化
- **メモリ使用量**: 効率的なメモリ管理

### コード品質
- **型安全性**: TypeScript 100%
- **エラーハンドリング**: 適切な例外処理
- **コードレビュー**: 変更前の確認

---

## トラブルシューティング

### よくある問題と解決法

#### 問題: Metro bundlerエラー
```bash
npm run reset  # キャッシュクリアと再インストール
```

#### 問題: 実機接続できない
```bash
npx expo start --go --tunnel  # トンネルモード+Expo Go強制
```

#### 問題: TypeScriptエラー
```bash
npm run type-check  # 型チェック実行
```

---

## 禁止事項

### 絶対にやってはいけないこと
- ❌ `any`型の使用
- ❌ Hermesエンジンの無効化
- ❌ 型チェックのスキップ
- ❌ セキュリティ設定の変更
- ❌ プロダクションでのExpo Go使用

---

## 推奨事項

### 開発効率向上
- ✅ ホットリロードの活用
- ✅ デバッガーの活用
- ✅ 実機での頻繁なテスト
- ✅ TypeScriptの厳密設定

### コード品質向上
- ✅ 定期的なリファクタリング
- ✅ パフォーマンス監視
- ✅ アクセシビリティ考慮
- ✅ プラットフォーム最適化

---

## 今回の開発知見

### 成功したアプローチ
1. **Expo CLI**: `npx create-expo-app . --template blank-typescript` が最も確実
2. **Hermesエンジン**: app.jsonでの明示的設定が重要
3. **実機テスト**: Expo Goが最も簡単で効果的
4. **ネットワーク**: 同一Wi-Fi環境での開発が必須

### 注意すべき問題
1. **テンプレート選択**: `typescript`だけでなく`blank-typescript`を指定
2. **ディレクトリ構造**: 既存ディレクトリへの作成は注意が必要
3. **ネットワーク設定**: ファイアウォール・VPNの影響に注意
4. **デバイス準備**: 開発者オプション等の事前設定が重要
5. **expo-dev-client干渉**: `--go`フラグ必須（iOS QRコード認識のため）

### パフォーマンス最適化
- Hermesエンジンによる起動時間短縮
- TypeScriptによる開発時エラー削減
- Hot Reloadによる開発効率向上

---

## 関連ドキュメント

- [Expo公式ドキュメント](https://docs.expo.dev/)
- [React Native公式ドキュメント](https://reactnative.dev/)
- [Hermesエンジンドキュメント](https://hermesengine.dev/)
- `DEVICE_TESTING_MANUAL.md`: 実機テスト詳細マニュアル

---

## バージョン管理

### このルールファイルのバージョン
- **作成日**: 2024-08-14
- **最終更新**: 2024-08-14  
- **作成者**: フリーザ様（戦闘力: 530,000）
- **適用プロジェクト**: expo-mobile-playground

### 更新履歴
- v1.0.0: 初版作成（プロジェクト基盤構築完了）

---

## フリーザ様からの最終指導

「このルールに従い、完璧な品質を保て。手抜きは許さん。
宇宙最強のアプリケーションを構築するのだ！」

*このルールファイルは、フリーザ様の完璧な美学に基づいて作成されています。*
*違反者は、宇宙の彼方まで吹き飛ばします。*

---

**©️ 2024 フリーザ軍団開発部 - All Rights Reserved**